// Created on Mon March 23 2020
int l_motor= 0;
int r_motor= 2;
int speed= 100;
int pause = 1000;
int leftbumper=8;
int rightbumper=9;
int halfspeed=50;
int halfpause=500; 
int rightsensor= 6;
int leftsensor= 5; 
int rightrange= 2; 
int leftrange =0; 
int middlerange= 1;
int longpause= 2500;
int rangedistance= 550;
int slightpause= 350;
int midrangedistance= 400;


int main(){
printf("starting\n");
msleep(pause);

	while (analog(rightrange)>rangedistance){  //align with wall
	turnright();
		printf("turningright\n");
	}
ao();
	while (digital(leftbumper)==0 && digital(rightbumper)==0){    //progress down the board 
		forward();                         
		printf("movingforward\n");
	}
		
    ao();               //stop at bottom wall and turn to face right side of board
	reverse();
	msleep(halfpause);
    turnleft();
	msleep(slightpause);
		
	

		printf("exitedloop#1\n"); //notification that the robot has turned successfully 
		while(1){								//following the horizontal black line
			forward();
		    if (analog(rightsensor)>0){
			 turnleftgradual();
			 printf("turningleft!\n");
			
		}
		    if (analog(leftsensor)>0){
			 turnright();
			 printf("turningright!\n");
			
		}
	
	}
	while (analog(middlerange)>midrangedistance){  //staying close to wall 
		forward();
	}
	        if (analog(middlerange)<midrangedistance){  //reach the end of the wall and turn 
		     turnleft();
		     msleep(halfpause);
	}
msleep(longpause); // stop at vertical top wall 
ao();

return 0;
 }

//function definitions

int forward(){
motor(l_motor,speed);
   motor(r_motor,speed);
   

}
int turnright (){
  motor(l_motor,speed);
   motor(r_motor,halfspeed);
   
}

   
int turnleft (){
  motor(l_motor,-speed);
   motor(r_motor,speed);
    
   
}
int turnleftgradual (){
  motor(l_motor,halfspeed);
   motor(r_motor,speed);
    
   
}

int reverse(){
	motor(l_motor,-speed);
   motor(r_motor,-speed);
   

}
