// Created on Mon March 23 2020
int l_motor= 0;
int r_motor= 2;
int speed= 100;
int pause = 1000;
int leftbumper=8;
int rightbumper=9;
int halfspeed=50;
int halfpause=500; 
int rightsensor= 6;
int leftsensor= 5; 
int rightrange= 2; 
int leftrange =0; 
int middlerange= 1;
int longpause= 2500;
int rangedistance= 550;
int slightpause= 350;
int midrangedistance= 400;
int counter = 0; 


int main(){
printf("starting\n");
msleep(pause);
	sharpright();                      //set the robot on a straght line down the board 
	msleep(100);
	
	
	while(digital(rightbumper)==0){    //shimmy along the line 
		forward();
		printf("going\n");
	if(analog(rightrange)>600){
		printf("righty\n");
		turnright();
	}
	if (analog(rightrange)<600){
		printf("lefty\n");
		turnleftgradual();
	}
	if (digital(rightbumper)==1){      //if it hits wall, reverse and turn to get back on track 
ao();
reverse();
msleep(halfpause);		
    turnleftgradual();
	msleep(1300);
	}
	if (analog(rightsensor)>0){     //counter in order to shut down in oppoiste corner 
		counter= counter+1;
	}
	
	if (counter==5){
		ao();
	}
	/*if(analog(leftsensor)>0){
		counter= counter +1;
	}
	if (counter == 2){
		msleep(pause);
		ao();
	}

	
}

}	

return 0;
 }

//function definitions

int forward(){
motor(l_motor,speed);
   motor(r_motor,speed);
   

}
int turnright (){
  motor(l_motor,speed);
   motor(r_motor,-30);
   
}
int sharpright (){
  motor(l_motor,speed);
   motor(r_motor,-speed);
   
}


   
int turnleft (){
  motor(l_motor,-speed);
   motor(r_motor,speed);
    
   
}
int turnleftgradual (){
  motor(l_motor,-30);
   motor(r_motor,speed);
    
   
}

int reverse(){
	motor(l_motor,-speed);
   motor(r_motor,-speed);
   

}
